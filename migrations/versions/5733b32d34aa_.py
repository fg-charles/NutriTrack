"""empty message

Revision ID: 5733b32d34aa
Revises: 
Create Date: 2023-09-20 10:56:57.901628

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5733b32d34aa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('exercise', sa.Float(), nullable=True),
    sa.Column('sex', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], name=op.f('fk_followers_followed_id_user')),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_followers_follower_id_user'))
    )
    op.create_table('mealplan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_mealplan_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mealplan'))
    )
    with op.batch_alter_table('mealplan', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_mealplan_timestamp'), ['timestamp'], unique=False)

    op.create_table('fooditem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('no_servings', sa.Float(), nullable=True),
    sa.Column('mealplan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mealplan_id'], ['mealplan.id'], name=op.f('fk_fooditem_mealplan_id_mealplan')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fooditem'))
    )
    op.create_table('nutri_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('protein_low', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('carbs_low', sa.Float(), nullable=True),
    sa.Column('fiber', sa.Float(), nullable=True),
    sa.Column('sugar', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('fat_low', sa.Float(), nullable=True),
    sa.Column('sat_fat', sa.Float(), nullable=True),
    sa.Column('calcium', sa.Float(), nullable=True),
    sa.Column('iron', sa.Float(), nullable=True),
    sa.Column('magnesium', sa.Float(), nullable=True),
    sa.Column('phosphorus', sa.Float(), nullable=True),
    sa.Column('potassium', sa.Float(), nullable=True),
    sa.Column('sodium', sa.Float(), nullable=True),
    sa.Column('zinc', sa.Float(), nullable=True),
    sa.Column('vitA', sa.Float(), nullable=True),
    sa.Column('vitE', sa.Float(), nullable=True),
    sa.Column('vitD', sa.Float(), nullable=True),
    sa.Column('vitC', sa.Float(), nullable=True),
    sa.Column('thiamin', sa.Float(), nullable=True),
    sa.Column('riboflavin', sa.Float(), nullable=True),
    sa.Column('niacin', sa.Float(), nullable=True),
    sa.Column('vitB6', sa.Float(), nullable=True),
    sa.Column('vitB12', sa.Float(), nullable=True),
    sa.Column('chlorine', sa.Float(), nullable=True),
    sa.Column('vitK', sa.Float(), nullable=True),
    sa.Column('folate', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('mealplan_id', sa.Integer(), nullable=True),
    sa.Column('fooditem_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fooditem_id'], ['fooditem.id'], name=op.f('fk_nutri_info_fooditem_id_fooditem')),
    sa.ForeignKeyConstraint(['mealplan_id'], ['mealplan.id'], name=op.f('fk_nutri_info_mealplan_id_mealplan')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_nutri_info_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nutri_info'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nutri_info')
    op.drop_table('fooditem')
    with op.batch_alter_table('mealplan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mealplan_timestamp'))

    op.drop_table('mealplan')
    op.drop_table('followers')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
